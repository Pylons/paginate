Version 0.5.7 - 2024-08-25
--------------------------
Changes:
- Fixed metadata for pypi
- Added a wheel release
- Fixed tests for python 3.12


Version 0.5.6 - 2016-11-22
--------------------------
Changes:
- Fixed metadata for pypi

Version 0.5.5 - 2016-11-22
--------------------------
Changes:
- Python 2.7/3.4+ compatibility improvements

Version 0.5.4 - 2016-04-25
--------------------------
Changes:
- Added radius size config option


Version 0.5.3 - 2016-03-09
--------------------------
Changes:
- Unocode related fixes

Version 0.5.2 - 2015-08-29
--------------------------
Changes:
- Handle the slice prior to handling the length - for better experience with
  various databases that include item count in results
- bugfixes

Version 0.5.1 - 2015-10-22
--------------------------
Changes:
- bugfixes


Version 0.5.0 - 2015-08-29
--------------------------
Changes:
- link_tag callable can now be passed to generate custom link markup
- page object now has link_map() method that returns a mapping of information useful for generating
  custom markup based on paginator data

Version 0.4.0 - 2012-12-06
--------------------------
Paginate has prior been maintained as webhelpers.paginate in the _webhelpers_ packages.
This version is a standalone version that should be useful outside of the webhelpers'
context.

Changes:
- Python 3 compatibility.
- SQLAlchemyObject and SQLAlchemyQuery collections are not automatically detected any more.
  Instead you can use the respective Page class from the paginate_sqlalchemy module also
  available on PyPi.
- presliced_list parameter no longer supported
- 'page_nr' and 'current_page' had been deprecated already and are now removed. Please use 'page'
  instead.
- No automatic URL generation. You need to pass a 'url' argument to the Page.pager() method
  containing a $page placeholder where you want the page number to be put in. Beware that the URL
  is not quote-escaped any further.
- The Page.pager() does not automatically add CSS classes any more. If you want the old
  behavior you need to pass these parameters explicitly:
  link_attr={'class':'pager_link'}
  curpage_attr={'class':'pager_curpage'}
  dotdot_attr={'class':'pager_dotdot'}
- The partial_param parameter from Page.pager() is gone. You should use your own URLs for
  AJAX/partial updates in the 'url' parameter.
- The page_param parameter from Page.pager() is also gone as URL generation has been severely
  simplified.
- The string returned from Page.pager() consists of escaped HTML already. So you need to tell
  your web framework to use the string verbatim and without further escaping.
  The parameters symbol_first, symbol_last, symbol_previous and symbol_next use
  &lt; and &gt; instead of "<" and ">" now.
- Page.__repr__ now returns a brief representation. E.g. <paginate.Page: 1 of 1>
  Page.__str__ returns the verbose view you may be used to.

Version 0.3.2 - 2008-01-31
--------------------------
Public release on PyPi
